
Today's topics

Revise JSP Basics
JSP scripting elements
HttpSession + URL Rewriting
JSP Directives
JSP Actions
JSP-JavaBean
JSTL


1. Name JSP Scripting elements
scriptlets, expressions(OR EL syntax) , declaration

2. Name JSP implicit objects available from scriptlets n expression
request,response,out,config,session,application,exception,page,pageContext

3. Name EL impl objects available from EL syntax(${...})
param,pageScope...applicationScope,cookie,initParam



4. Solve
eg : How will you get the value of a cookie by the name "abc" , using EL syntax
${cookie.abc.value}
5. Solve : what will be o/p 
${pageContext.session.maxInactiveInterval}
pageContext.getSession().getMaxInactiveInterval()
1800

6. Suppose : user_info : session scoped attribute
${sessionScope.user_info}


7. ${pageContext.session.id}



8. ${param.email}

9. How to invalidate session ?
Options : 
1. Scriptlet : 
<%
 session.invalidate();
%> 
2. JSP expr : <%= session.invalidate() %> 
3. EL syntax : ${pageContext.session.invalidate()} 
Choose correct options :1 ,3
Problem with 3rd option -- IDE doesn't understand , so gives error.
BUT it actually works!


1. Check if there are any problems observed in client pull , in basic JSP assignment , if cookies are disabled? YES
Can  not remember the client across multiple requests.
Why : cookies are blocked.

Any solution ? 
refer : "\day5_help\readmes\regarding URL rewriting.txt"


Any problems in URL rewriting technique : YES


Vulnerable (open to security attack) :

Security attack : Session Fixation or / session stealing

Soln : Do not use URL rewriting approach n force the clients to accept the cookies (Cookies also can be stored in a secure manner , Cookie class API : public void setSecure(boolean flag))
OR use https : for end to end encryption


2. Identify JSP Directives n  important attributes
page
include
taglib


3. JSP Actions 
3.1  Request dispatcher related

3.2 JSP - JavaBean related actions

Objective : User login in online voting
We have already solved it using servlets . Right ?
So why JSP  Using Java Beans
For separation of concerns(=tasks/responsibilities)
We are going to separate :
1.  P.L (presentation logic) , navigation in a JSP 
(w/o using java code)

2. B.L (Business logic) : separated in a java class : java bean 


Enter 
1. What is a java bean ?
Java class containing B.L (service layer in spring)
It's attribute (=server side entry , key=string , value=object) created by WC as a result of <jsp:useBean>, can be added under page|request|session|application



2. Why Java Beans ?


case study : Voting case study  (admin role)


Layers to be copied from earlier (servlet based) assgnment
No change in : Tables, POJOs, DAOs , DBUtils
 
Steps


3. JSP standard Actions Using java beans 
3.1
<jsp:useBean id="bean id" class="Fully qualified bean class" scope="page|request|session|application"/>
Mandatory attributes : id n class
Def value of scope=page

eg: 

Internals (What will WC invoke?)
refer to a digram

2. Data binding  from view layer ---> model (java bean)
i.e calling the setters of Javabean properties.
<jsp:setProperty name="bean id" property="*"/>
eg : 

WC tries to invoke ALL MATCHING setters , on java bean instance
(i.e for complete data xfer : MATCH req param names with JB property setters)

3. Invoke B.L method using EL syntax
eg : ${sessionScope.user.validateUser()}
WC : 

4. Navigate clnt to the next page in the SAME request(server pull : forward)
eg : <jsp:forward page="${sessionScope.user.validateUser()}.jsp"/>


5. How to invoke getters of JB ?
5.1 <jsp:getProperty name="voter" property="validatedUser"/>


OR 
EL syntax : 

WC : 


6. Any problems observed with server pull(RD's forward scenario)  
Multiple submission issue
Why ? Client is navigated to the next page , in the SAME request 
Can result into increased DB traffic or even worse --dup records 
eg dup orders.

What's the solution ? Double/multiple submit guard
Design Pattern : PRG (Post--Redirect--Get)

Replace server pull by client pull 
(i.e replace RD's forward by sendRedirect)

7. Enter JSTL

Import JSTL core tag lib n use tag.
Steps
1. Copy/confirm jstl1.2.jar under <tomcat> / lib
(Already done in the supplied server)

2. Import JSTL supplied core tag lib
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<c:redirect url="next page URL/redirect location"/>
Performs redirect + URL encoding


3. Use the tag
eg : In one.jsp : 
<c:redirect url="two.jsp"/>
WC : response.sendRedirect(response.encodeRedirectURL("two.jsp"));

If cookies are enabled ,WC sends location  : two.jsp
OR
If cookies are disabled , WC sends resp :   two.jsp;jsessionid=tgret45645654hfdhgf





Other JSTL Tags

1. <c:set var="abc" value="${param.name}" scope="session"/>
WC : session.setAttribute("abc",request.getParameter("name"));

2. <c:remove var="abc"  scope="session"/>
WC : session.removeAttribute("abc") (equivalent to Map's remove)

3. <c:set var="abc" value="${param.name}"/>
WC : pageContext.setAttribute("abc",request.getParameter("name"));

4. eg : In HTML form 
<input type="submit" name="btn" value="Withdraw">
<input type="submit" name="btn" value="Deposit">
In transactions.jsp
<c:if test="${param.btn eq 'Withdraw'}">
 In withdraw 
</c:if>
WC : 
if(request.getParameter("btn").equals("Withdraw")
 out.print("in withdraw")
Use case : voter login --success -not yet voted --list.jsp ---status.jsp
voter login --success -alrdy  voted ----status.jsp

status.jsp : after casting a vote => increment votes n change voting status
directly : u have alrdy voted => no action --display a message
eg : 
<c:if test="${sessionScope.voter.status}">
 You have alrdy voted....
</c:if>


5. 
<c:choose>
 <c:when test="${param.btn eq 'Withdraw'}">
 In withdraw 
 </c:when>
 <c:when test="${param.btn eq 'Deposit'}">
In Deposit
 </c:when>
 <c:otherwise>
 some other btn ......
 </c:otherwise>
</c:choose>

URL :  
http://host:port/one.jsp?name="Ranjana"

In one.jsp
<c:set var="abc" value="${param.name}" scope="session"/> 
<c:redirect url="two.jsp"/>
WC : response.sendRedirect(response.encodeRedirectURL("two.jsp"));

In two.jsp
${sessionScope.abc} : Ranjana  ---Even if cookies are enabled/disabled

eg : 
<c:redirect url="${sessionScope.user.validateUser()}.jsp"/>

